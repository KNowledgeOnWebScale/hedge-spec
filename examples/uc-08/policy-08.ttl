@prefix dcterms:       <http://purl.org/dc/terms/> .
@prefix dpv:           <https://w3id.org/dpv#> .
@prefix dpv-odrl:      <https://w3id.org/dpv/mappings/odrl#> .
@prefix ehds:          <https://w3c.github.io/dpv/2.1/legal/eu/ehds/> .
@prefix ex:            <https://example.org/> .
@prefix odrl:          <http://www.w3.org/ns/odrl/2/> .
@prefix rdfs:		   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sector-health: <https://w3id.org/dpv/sector/health#> .
@prefix time:          <http://www.w3.org/2006/time#> .
@prefix xsd:           <http://www.w3.org/2001/XMLSchema#> .

ex:uc08-p-pseudonymisedweight-improvehealthcare-physicianDC-read a odrl:Set ;
    odrl:uid ex:uc08-p-pseudonymisedweight-improvehealthcare-physicianDC-read ;
    dcterms:description "Patient allows her weight subset of health data to be read for secondary use (improving healthcare). Known URI to be refined. Data must be Pseudonymised."@en ;
    odrl:permission [
        odrl:action odrl:read ;
        odrl:target [
            odrl:source ex:weight ; 
            odrl:refinement [
                odrl:leftOperand dpv:DataSource ;
                odrl:operator odrl:eq ;
                odrl:rightOperand ehds:HealthcareProvider ], [
                odrl:leftOperand odrl:dateTime ;
                odrl:operator odrl:isIn ;
                odrl:rightOperand [
                    a time:ProperInterval ;
                    time:hasBeginning ex:FirstEncounterEvent ;
                    time:hasEnd [
                        a time:ProperInterval ;
                        time:intervalAfter ex:SurgeryEvent ;
                        time:hasDurationDescription [
                            a time:DurationDescription ;
                            time:years "1"^^xsd:integer ] ] ] ] ]; # 1 year after surgery, time window activated when surgery date is recorded
        odrl:assigner ex:patient ;
        dpv:DataController ex:physician ;
        odrl:constraint [
            odrl:leftOperand dpv-odrl:Purpose ;
            odrl:operator odrl:isAnyOf ;
            odrl:rightOperand dpv:ScientificResearch, dpv:ImproveHealthcare, sector-health:ResearchDevelopment, 
                ehds:HealthcareScientificResearch, ehds:ProvideHealthcareOfficialStatistics, ehds:PublicInterestRelatedToHealth, 
                ehds:EnsureQualitySafetyHealthcare, ehds:ProtectAgainstCrossBorderThreatsToHealth, ehds:PublicHealthSurveillance ], [
            odrl:leftOperand dpv-odrl:Processing ;
            odrl:operator odrl:isA ;
            odrl:rightOperand dpv:Pseudonymisation ],[
            odrl:leftOperand dpv:hasPseudonymisationTechnique ;
            odrl:operator odrl:isAnyOf ;
            odrl:rightOperand dpv:DeterministicPseudonymisation, dpv:MonotonicCounterPseudonymisation ] ] .

# Abstract event definitions, in a third file "events-04.ttl" (to be instantiated with concrete dates)
ex:FirstEncounterEvent a time:Instant, odrl:Event ;
    rdfs:comment "The first patient-physician encounter".

ex:SurgeryEvent a time:Instant, odrl:Event ;
    rdfs:comment "The surgical procedure (may be in future)".

## When the policy is enforced, it should execute this logic:
#SELECT ?valid WHERE {
#    ?encounter a ex:FirstEncounterEvent ;
#               time:inXSDDateTimeStamp ?encounterDate .
#    OPTIONAL {
#        ?surgery a ex:SurgeryEvent ;
#                 time:inXSDDateTimeStamp ?surgeryDate .
#        BIND (?surgeryDate + "P1Y"^^xsd:duration AS ?endDate)
#    }
#    BIND (IF(!BOUND(?endDate), true, 
#            (NOW() >= ?encounterDate && NOW() <= ?endDate)) AS ?valid)
#}


# 2. Explicit Time Points
#[
#    odrl:leftOperand odrl:dateTime ;
#    odrl:operator odrl:gteq ;
#    odrl:rightOperand ex:Patient123_FirstEncounter
#],[
#    odrl:leftOperand odrl:dateTime ;
#    odrl:operator odrl:lteq ;
#    odrl:rightOperand ex:Patient123_PostSurgeryYear
#]
#...
#### Concrete event instances (would be generated by your system when creating the policy)
#ex:Patient123_FirstEncounter a time:Instant, ex:FirstEncounterEvent ;
#    time:inXSDDateTimeStamp "2024-01-15T09:00:00Z"^^xsd:dateTime .
#
#ex:Patient123_Surgery a time:Instant, ex:SurgeryEvent ;
#    time:inXSDDateTimeStamp "2024-06-20T12:00:00Z"^^xsd:dateTime .
#
#ex:Patient123_PostSurgeryYear a time:Instant, ex:OneYearPostSurgery ;
#    time:inXSDDateTimeStamp "2025-06-20T12:00:00Z"^^xsd:dateTime .

# 3. Not valid turtle: '?encounterDate'
#odrl:Event ; # Anchor to surgery event
#                odrl:operator odrl:isA ;
#                odrl:rightOperand [
#                    a time:ProperInterval ;
#                    time:hasBeginning [
#                        a time:Instant ;
#                        time:inXSDDateTimeStamp ?encounterDate ;
#                        odrl:Event ex:FirstEncounterEvent
#                    ] ;
#                    time:hasEnd [
#                        a time:Instant ;
#                        time:inXSDDateTimeStamp ?surgeryEndDate ;
#                        odrl:Event [
#                            a ex:SurgeryEvent ;
#                            time:hasDuration "P1Y"^^xsd:duration  # 1 year after surgery
#                        ] ] ] ] ];

# 4. time:lteq & gteq ***
#[
#odrl:leftOperand odrl:dateTime ; 
#odrl:operator odrl:isIn ;
#odrl:rightOperand ex:FirstEncounterEvent ], [
#odrl:leftOperand odrl:dateTime ; 
#odrl:operator odrl:lteq ;
#odrl:rightOperand [
#    a time:Instant ;
#    time:intervalAfter ex:SurgeryEvent ;
#    time:hasDuration "P1Y"^^xsd:duration  # 1 year after surgery, time window activated when surgery date is recorded
#    ] ]
#+ declaring events-04.ttl

#Pseudonymisation
#odrl:constraint [
#            odrl:leftOperand dpv:Data ;
#            odrl:operator odrl:isAnyOf ;
#            odrl:rightOperand dpv:PseudonymisedData, dpv:AnonymisedData ]
#âˆ«
#odrl:target [
#            odrl:source ex:weight ; 
#            odrl:refinement [
#                odrl:leftOperand dpv:Data ;
#                odrl:operator odrl:isAnyOf ;
#                odrl:rightOperand dpv:PseudonymisedData, dpv:AnonymisedData ]] ;
        